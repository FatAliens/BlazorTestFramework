@page "/"

<Container Fluid>
    @if (questions != null && !isResult)
    {
        <Steps SelectedStep="@selectedQuestion.Id" SelectedStepChanged="OnSelectedStepChanged">
            <Items>
                @foreach (var question in questions)
                {
                    <Step Name="@question.Id">
                        <Text>@question.Title</Text>
                    </Step>
                }
            </Items>
            <Content>
                @foreach (var question in questions)
                {
                    <StepPanel Name="@question.Id">
                        <Row Padding="Padding.Is5">
                            <Column>
                                <Row>
                                    <Heading Size="HeadingSize.Is1">
                                        @question.Content
                                    </Heading>
                                </Row>
                                <Row>
                                    <RadioGroup TValue="string" Orientation="Orientation.Vertical" @bind-CheckedValue="question.SelectedVariant">
                                        @foreach (var variant in question.Variants)
                                        {
                                            <Radio TValue="string" Value="variant.Id">
                                                @variant.Content
                                            </Radio>
                                        }
                                    </RadioGroup>
                                </Row>
                            </Column>
                        </Row>
                    </StepPanel>
                }
            </Content>
        </Steps>
        <Row Flex="Flex.AlignItems.Center">
            <Column ColumnSize="ColumnSize.Is2.OnDesktop.Is3.OnTablet">
                <Button Color="Color.Secondary" Disabled="isFirst" Block Clicked="OnPrev">Предыдущий</Button>
            </Column>
            <Column ColumnSize="ColumnSize.Is2.OnDesktop.Is3.OnTablet">
                <Button Color="Color.Primary" Disabled="isLast || !isSelected" Block Clicked="OnNext">Следующий</Button>
            </Column>
            @if (isLast)
            {
                <Column ColumnSize="ColumnSize.Is4.OnDesktop.Is6.OnTablet">
                    <Button Color="Color.Success" Block Disabled="!isSelected" Clicked="() => isResult = true">Узнать результат</Button>
                </Column>
            }
        </Row>
    }
    else if (isResult)
    {
        @if (maxResult != null)
        {
            <Row>
                <Column ColumnSize="ColumnSize.Is8.OnWidescreen.Is12.OnMobile">
                    <Card Margin="Margin.Is5.OnDesktop.Is1.OnMobile">
                        <CardBody>
                            <CardTitle Size="5">@maxResult.Title</CardTitle>
                            <CardText>@maxResult.Content</CardText>
                        </CardBody>
                        <CardImage Source="@maxResult.ImageURL" Alt="@maxResult.Title" Width="Width.Is50">
                        </CardImage>
                    </Card>
                </Column>
            </Row>
        }
        else
        {
            <Heading>Result loading error!</Heading>
        }
    }
    else
    {
        <Heading Size="HeadingSize.Is1">
            Загружаем вопросы...
        </Heading>
    }
</Container>

@code {
    private bool isFirst => selectedQuestion == questions.First();
    private bool isLast => selectedQuestion == questions.Last();
    private bool isSelected => !string.IsNullOrWhiteSpace(selectedQuestion.SelectedVariant);
    private bool isResult = false;

    private List<string> selectedItems => questions.Select(q => q.SelectedVariant).ToList();

    private Result maxResult
    {
        get
        {
            Dictionary<string, int> resultGroup = new Dictionary<string, int>();
            foreach (var result in selectedItems)
            {
                if (!resultGroup.Keys.Contains(result))
                {
                    resultGroup.Add(result, 1);
                }
                else
                {
                    resultGroup[result]++;
                }
            }
            string id = resultGroup.Aggregate((a, b) => a.Value > b.Value ? a : b).Key;
            return results.Where(r => r.Id == id).FirstOrDefault();
        }
    }



    private Question selectedQuestion;

    protected override async Task OnInitializedAsync()
    {
        string debug = "";
        foreach (var question in questions)
        {
            debug += question + "\n";
        }
        Console.WriteLine(debug);

        debug = "";
        foreach (var result in results)
        {
            debug += result + "\n";
        }
        Console.WriteLine(debug);

        selectedQuestion = questions.First();
    }

    private void OnPrev()
    {
        if (!isFirst)
        {
            selectedQuestion = questions[questions.IndexOf(selectedQuestion) - 1];
        }
    }

    private void OnNext()
    {
        if (!isLast)
        {
            selectedQuestion = questions[questions.IndexOf(selectedQuestion) + 1];
        }
    }

    private void OnSelectedStepChanged(string selectedId)
    {

    }

    private List<Question> questions = new List<Question>()
    {
        new Question()
        {
            Title = "Характер",
            Id = "1",
            Content = "Ты по характеру…",
            Variants = new List<Variant>()
            {
                new Variant()
                {
                    Content = "Милый(-ая) и застенчивый(-ая)",
                    Id = "1"
                },
                new Variant()
                {
                    Content = "Смелый(-ая) и преданный(-ая)",
                    Id = "2"
                },
                new Variant()
                {
                    Content = "Веселый(-ая) и общительный(-ая)",
                    Id = "3"
                },
                new Variant()
                {
                    Content = "Замкнутый(-ая) и колкий(-ая)",
                    Id = "4"
                },
                new Variant()
                {
                    Content = "Спокойный(-ая) и ответственный(-ая)",
                    Id = "5"
                },
                new Variant()
                {
                    Content = "Упорный(-ая) и независимый(-ая)",
                    Id = "6"
                },
            }
        },
        new Question()
        {
            Title = "Учеба",
            Id = "2",
            Content = "Как ты относишься к учебе?",
            Variants = new List<Variant>()
            {
                new Variant()
                {
                    Content = "Я стараюсь следить за оценками, учусь хорошо",
                    Id = "1"
                },
                new Variant()
                {
                    Content = "Я хоть и стараюсь, но оставляю время для более важного",
                    Id = "2"
                },
                new Variant()
                {
                    Content = "Мне плевать на учебу",
                    Id = "3"
                },
                new Variant()
                {
                    Content = "Учеба даётся мне с трудом",
                    Id = "4"
                },
                new Variant()
                {
                    Content = "Я отличник(-ца) без всяких усилий",
                    Id = "5"
                },
                new Variant()
                {
                    Content = "Я хорошо учусь только по интересным для меня предметам",
                    Id = "6"
                },
            }
        },
        new Question()
        {
            Title = "Цвет",
            Id = "3",
            Content = "Какой из перечисленных цветов тебе нравится больше?",
            Variants = new List<Variant>()
            {
                new Variant()
                {
                    Content = "Розовый",
                    Id = "1"
                },
                new Variant()
                {
                    Content = "Голубой",
                    Id = "2"
                },
                new Variant()
                {
                    Content = "Желтый",
                    Id = "3"
                },
                new Variant()
                {
                    Content = "Пурпурный",
                    Id = "4"
                },
                new Variant()
                {
                    Content = "Фиолетовый",
                    Id = "5"
                },
                new Variant()
                {
                    Content = "Зеленый",
                    Id = "6"
                },
            }
        },
        new Question()
        {
            Title = "Лучшая\nчерта",
            Id = "4",
            Content = "Какая твоя лучшая черта характера?",
            Variants = new List<Variant>()
            {
                new Variant()
                {
                    Content = "Доброта",
                    Id = "1"
                },
                new Variant()
                {
                    Content = "Смелость",
                    Id = "2"
                },
                new Variant()
                {
                    Content = "Чувство юмора",
                    Id = "3"
                },
                new Variant()
                {
                    Content = "Независимость",
                    Id = "4"
                },
                new Variant()
                {
                    Content = "Спокойствие",
                    Id = "5"
                },
                new Variant()
                {
                    Content = "Упорство",
                    Id = "6"
                },
            }
        },
        new Question()
        {
            Title = "Худшая\nчерта",
            Id = "5",
            Content = "А какая черта худшая?",
            Variants = new List<Variant>()
            {
                new Variant()
                {
                    Content = "Робость",
                    Id = "1"
                },
                new Variant()
                {
                    Content = "Самовлюбленность",
                    Id = "2"
                },
                new Variant()
                {
                    Content = "Безалаберность",
                    Id = "3"
                },
                new Variant()
                {
                    Content = "Ранимость",
                    Id = "4"
                },
                new Variant()
                {
                    Content = "Холодность",
                    Id = "5"
                },
                new Variant()
                {
                    Content = "Нетерпеливость",
                    Id = "6"
                },
            }
        }
    };

    private List<Result> results = new List<Result>()
    {
        new Result()
        {
            Id="1",
            Title="Флора",
            Content=@"      Тихая, скромная и застенчивая девушка.
      Её лучшие друзья — цветы, иногда кажется, что с ними она чувствует себя увереннее, чем с людьми.
      Во 2 сезоне у Флоры возникают проблемы из-за нерешительности: вместо того, чтобы просто сделать что-то, она начинает раздумывать, что же случится в случае неудачи, что особенно ярко проявляется в её чувствах к Гелии.
      Ближе к концу 2 сезона Флора становится более уверенной и получает Чармикс, признавшись Гелии в своих чувствах. Но, судя по всему, явление это временное, потому что в последующих сезонах нерешительность опять становится её визитной карточкой.
",
            ImageURL = "images/flora.png"
        },
        new Result()
        {
            Id="2",
            Title="Блум",
            Content=@"      Блум любопытная и немножко хитрая (ведь, как признаёт сама Блум, без хитрости она бы не выжила);
      у неё добрая душа, она всегда готова помочь другим (если видит, что с кем-то поступают несправедливо, не может не вмешаться).
      Хотя некоторые события доказывают нам обратное, Блум считает себя очень нерешительной и неуверенной в себе;
      её девиз: «Убеди меня, что я поступаю правильно, и я тебя поцелую».
      Блум старается побороть свои недостатки, и в этом ей помогают остальные Винкс.
      В плане чувств, Блум очень ранима, даже малейший намёк на отдаление Ская приводит её в отчаяние или слёзы.
",
            ImageURL = "images/blum.png"
        },
        new Result()
        {
            Id="3",
            Title="Стелла",
            Content=@"      Эгоистичная, самовлюбленная, уделяет слишком много внимания моде и красоте, но в то же время так и остается той маленькой, закомплексованной, неуверенной в себе девочкой, какой была в детстве.
      Стелла олицетворяет собой широко распространенный стереотип «глупой блондинки», однако способна на искренние переживания за друзей и близких, а в критических ситуациях способна действовать рационально и находить разумное применение своим силам.
      Жизнерадостна, открыта и очень артистична.
",
            ImageURL = "images/stella.png"
        },
        new Result()
        {
            Id="4",
            Title="Муза",
            Content=@"      Муза любит подшучивать над подругами, хотя иногда это бывает чёрным юмором.
      Вообще юмор, по словам самой феи, сидит у неё внутри, как музыкальный ритм, задающий тон каждому дню её жизни.
",
            ImageURL = "images/muza.png"
        },
        new Result()
        {
            Id="5",
            Title="Тенка",
            Content=@"Очень горда, поэтому, чтобы не показаться слабой, скрывает свои эмоции.
      Она рассудительна и осторожна, но при этом также смела и жизнерадостна.
      Отличается умом и прямолинейностью.
      Спокойна, иногда кажется холодной и равнодушной.",
            ImageURL = "images/tekna.png"
        },
        new Result()
        {
            Id="6",
            Title="Лейла",
            Content=@"Очень активная и спортивная, она не любит долго высчитывать различные варианты, а предпочитает действовать.
      Часто она бывает чересчур вспыльчива и опрометчива, а иногда волнуется по пустякам.
      Есть у Лейлы и слабое место — она боится остаться одна.
      Зато девушка всегда приходит на помощь тем, кого любит.",
            ImageURL = "images/leila.png"
        }
    };
}
